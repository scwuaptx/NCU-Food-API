#!/usr/bin/python
#-*-coding:utf-8 -*-

import simplejson as json
import MySQLdb
import collections
import cgi,cgitb
import json

#Get the variable from URL
print "Content-type: application/json\n\n"
form = cgi.FieldStorage()

search = ""
prefer = ""
vicinity = ""
types = ""
condition = " WHERE "
table = ""
flag = False
if 'vicinity' in form and 'types' in form :
	vicinity = "vicinity LIKE '%" + form.getvalue('vicinity') + "%'"
	types = "types LIKE '%" + form.getvalue('types') + "%'"
	condition = vicinity + " AND " + types
else :
	if 'vicinity' in form :
		vicinity = form.getvalue('vicinity')
		if vicinity == 'all' :
			condition = ""
		else :
			vicinity = "vicinity LIKE '%" + vicinity + "%'"
			condition = condition + vicinity
	if 'types' in form :
		types = "types LIKE '%" + form.getvalue('types') + "%'"
		condition = condition + types
	if 'search' in form :
		search = "name LIKE '%" + form.getvalue('search') + "%'"
		condition = condition + search 
	if 'id' in form :
		flag = True
		idnum = form.getvalue('id') 
		condition = condition + "id = '" + idnum + "'"	
		if 'prefer' in form :
			prefer = form.getvalue('prefer')

#import SQL data
mydb = MySQLdb.connect(host='SERVER',user='User',passwd='Password',db='database',charset='utf8')
cursor = mydb.cursor()
SQLsyntaxfood = "SELECT * FROM sometable" + condition

#Execute syntax of SQL
cursor.execute(SQLsyntaxfood)

#Tranfer SQL data to json
rows = cursor.fetchall()
columns = [desc[0] for desc in cursor.description]
results = dict()
result = []
location = dict()
rate = dict()
for row in rows :
	row = dict(zip(columns,row))
	location['lat'] = row.pop('latitude')
	location['lng'] = row.pop('longitude')
	row['location'] = location
	rate['like'] = row.pop('like_people')
	rate['dislike'] = row.pop('dislike_people')
	row['rate'] = rate
	if prefer == 'likehash' :
		syntax = rate['like'] + 1
		SQLsyntaxprefer = "UPDATE sometable SET like_people = " + str(syntax) + " WHERE add_id = " + str(row['add_id'])
		cursor.execute(SQLsyntaxprefer)
		cursor.connection.commit()
	if prefer == 'dislikehash' :
		syntax = rate['dislike'] + 1
		SQLsyntaxprefer = "UPDATE sometable SET dislike_people = " + str(syntax) + " WHERE add_id = " + str(row['add_id'])
		cursor.execute(SQLsyntaxprefer)
		cursor.connection.commit()
	#Data of Menu
	try :			
		if flag is True :
			add_id = row['add_id']
			table = "menu_" + str(add_id)
			SQLsyntaxmenu = "SELECT * FROM " + table
			cursor.execute(SQLsyntaxmenu)
			MenuRows = cursor.fetchall()
			MenuColumns = [desc[0] for desc in cursor.description]
			menu = []
			FoodClass = dict()
			NumofType = []
			#Type of Menu
			for foodtypes in MenuRows :
				if foodtypes[0] not in NumofType :
					 NumofType.append(foodtypes[0])
			for types in NumofType :
				FoodClass[types] = []
			for MenuRow in MenuRows :
				MenuRow = dict(zip(MenuColumns,MenuRow))
				FoodClass[MenuRow['food_types']].append(MenuRow)
				MenuRow.pop('food_types')
			for types in NumofType :
				Foodtype = dict()
				Foodtype['Foodtypes'] = types
				Foodtype['MenuResult'] = FoodClass[types]
				menu.append(Foodtype)
				
			row['menu'] = menu
	except :
		flag = False
	row.pop('add_id')
	result.append(row)

results['results'] = result
subjects = json.dumps(results,indent = 4)
#output data of json 
print subjects
